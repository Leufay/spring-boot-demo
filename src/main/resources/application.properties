com.leofee.name = lixiufei
com.leofee.age = 26

#path为本地log地址
logging.path=/user/local/log
#logging.levl 后面可配置不同包路径的日志级别
logging.level.com.leofee.springbootdemo=DEBUG

#spring.datasource.url=jdbc:mysql://localhost:3306/test
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#1.create： 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，
#                   哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#2.create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#3.update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），
#                   以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在
#                   不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
#4.validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
##数据库引擎
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
##是否打印SQL
#spring.jpa.show-sql= true


# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=192.168.0.58
## Redis服务器连接端口
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=0


#启动端口号
#server.port=8004